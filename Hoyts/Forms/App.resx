<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="currentTime.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>58</value>
  </metadata>
</root>